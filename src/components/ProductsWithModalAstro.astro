---
import { Image } from 'astro:assets';
import mottBack from '../../public/docs/Mott-Back.jpg';
import mottShippingFront from '../../public/docs/Mott-Shipping-Front.jpg';

const images = [
  { src: mottShippingFront, alt: 'EcoDenser Front View', title: 'Front' },
  { src: mottBack, alt: 'EcoDenser Back View', title: 'Back' },
];
---

<div class="relative">
  <div class="text-center mb-12">
    <h3 class="text-2xl font-bold text-gray-900 mb-3">Product Views</h3>
    <div class="w-20 h-1 bg-blue-600 mx-auto rounded-full mb-4"></div>
    <p class="text-gray-600 max-w-2xl mx-auto">
      Explore detailed views of the EcoDenser system. Click on any image to view in full resolution.
    </p>
  </div>
  
  <div class="grid md:grid-cols-2 gap-8 max-w-6xl mx-auto">
    {images.map((image, index) => (
      <div class="group">
        <div 
          class="relative overflow-hidden rounded-2xl shadow-2xl cursor-pointer bg-gray-100 product-image-card"
          data-image-src={image.src.src}
          data-image-alt={image.alt}
        >
          <Image
            src={image.src}
            alt={image.alt}
            class="w-full aspect-[4/3] object-cover transition-all duration-500 hover:scale-110"
            width={800}
            height={600}
            format="webp"
            quality={85}
            loading="lazy"
          />
          
          <div class="absolute top-4 left-4">
            <div class="inline-flex items-center space-x-2 bg-white/95 backdrop-blur-sm px-4 py-2 rounded-full shadow-lg">
              <div class="w-2 h-2 bg-blue-600 rounded-full"></div>
              <span class="text-sm font-semibold text-gray-800 tracking-wide">
                {image.title}
              </span>
            </div>
          </div>
          
          <div class="absolute inset-0 bg-gradient-to-t from-black/30 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
          
          <div class="absolute bottom-4 right-4 bg-white/95 backdrop-blur-sm p-3 rounded-full opacity-0 group-hover:opacity-100 transition-all duration-300 shadow-lg">
            <svg class="w-5 h-5 text-gray-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width={2} d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
            </svg>
          </div>
        </div>
      </div>
    ))}
  </div>
</div>

<script>
  // Use different variable names to avoid conflicts with gallery
  let productSelectedImage: { src: string; alt: string } | null = null;
  let productModalInstance: HTMLDivElement | null = null;

  // Create product modal container
  const productModalContainer = document.createElement('div');
  document.body.appendChild(productModalContainer);

  function openProductModal(src: string, alt: string) {
    productSelectedImage = { src, alt };
    if (productModalInstance) {
      productModalInstance.remove();
    }
    
    // Create modal backdrop
    const backdrop = document.createElement('div');
    backdrop.className = 'fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-75 backdrop-blur-sm';
    backdrop.onclick = closeProductModal;
    
    const modalContent = document.createElement('div');
    modalContent.className = 'relative max-w-full max-h-full p-4';
    modalContent.onclick = (e) => e.stopPropagation();
    
    const closeButton = document.createElement('button');
    closeButton.className = 'absolute top-2 right-2 z-10 bg-black bg-opacity-50 text-white p-2 rounded-full hover:bg-opacity-75 transition-all';
    closeButton.setAttribute('aria-label', 'Close modal');
    closeButton.innerHTML = '<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" /></svg>';
    closeButton.onclick = closeProductModal;
    
    const img = document.createElement('img');
    img.src = src;
    img.alt = alt;
    img.className = 'max-w-full max-h-[90vh] object-contain rounded-lg shadow-2xl';
    
    modalContent.appendChild(closeButton);
    modalContent.appendChild(img);
    backdrop.appendChild(modalContent);
    productModalContainer.appendChild(backdrop);
    
    productModalInstance = backdrop;
    document.body.style.overflow = 'hidden';
  }

  function closeProductModal() {
    if (productModalInstance) {
      productModalInstance.remove();
      productModalInstance = null;
    }
    document.body.style.overflow = 'unset';
  }

  // Add click handlers for product images
  document.addEventListener('DOMContentLoaded', () => {
    // Small delay to ensure DOM is fully loaded
    setTimeout(() => {
      const productImageCards = document.querySelectorAll('.product-image-card');
      console.log('Found product image cards:', productImageCards.length); // Debug log
      productImageCards.forEach(card => {
        if (card instanceof HTMLElement) {
          card.addEventListener('click', () => {
            console.log('Product card clicked'); // Debug log
            const src = card.dataset.imageSrc;
            const alt = card.dataset.imageAlt;
            console.log('Opening modal with:', src, alt); // Debug log
            if (src && alt) {
              openProductModal(src, alt);
            }
          });
        }
      });
    }, 100);
  });

  // ESC key handler for product modal
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && productModalInstance) {
      closeProductModal();
    }
  });
</script>